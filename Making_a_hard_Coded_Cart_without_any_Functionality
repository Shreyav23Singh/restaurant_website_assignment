* * * * * Modal.js * * * * * * 
import { Fragment } from 'react';
import ReactDOM from 'react-dom';
import classes from './Modal.module.css';

const Backdrop = (props)=>{
    return <div className={classes.backdrop}/>
}

const ModalOverlay = props =>{
    return <div className={classes.modal}>
    <div className={classes.content}>{props.children}</div>
    </div>
}

const portalElement = document.getElementById('overlays');

const Modal = (props) =>{
    return <Fragment>
   {ReactDOM.createPortal(<Backdrop/> , portalElement)}
   {ReactDOM.createPortal(<ModalOverlay>{props.children}</ModalOverlay> , portalElement)}

    </Fragment>



}
export default Modal;


* * * * * * * * * Cart.js * *  * * * * 

import classes from './Cart.module.css';
import Modal from '../UI/Modal';

const Cart = (props) =>{
    const cartItems =<ul className={classes['cart-items']}>{[ 
        { id:'c1',
        name:'Shreya',
        amount : 2,
        price:299
        },].map((item) => <l1>{item.name}</l1>) }</ul>

        return (
            <Modal>
            {cartItems}
            
            <div className={classes.total}>
            <span>Total Amount</span>
            <span>598</span>
            </div>
            <div className={classes.actions}>
            <button  className={classes['button--alt']}>Close</button>
            <button className={classes.button}>Order</button>
            </div>
            </Modal>

        );



};
export default Cart;


* * * * * * * * App.js * ** * * * ** * * * 

import { Fragment } from 'react';

import Header from './components/Layout/Header';
import Dishes from './components/Dishes/dishes';
import Cart from './components/Cart/Cart';

function App() {
  return (
    <Fragment>
    <Cart/>
    <Header/>
    <main>
    <Dishes/>
    </main>
    </Fragment>
  );
}

export default App;


* * * * * index.html * * * * 
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>React App</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="overlays"></div>  //////////////////////////////////////////////////////////////////// Overlay added here
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

