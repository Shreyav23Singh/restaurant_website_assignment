* * * * * * * * * * * *  cartProvider.js * * * * * * *  
import { useReducer } from "react";
import CartContext from "./cart-context";

const defaultCartState ={
    items:[],
    totalAmount :0
};

const cartReducer = (state , action) =>{

    if(action.type === 'ADD'){
        const updatedItems =state.items.concat(action.item);
        const updatedTotalAmount =state.totalAmount +action.item.price * action.item.amount;
        return{
            items:updatedItems , 
            totalAmount :updatedTotalAmount
        }
    }
    return defaultCartState;
};

const CartProvider = (props) => {
    const [cartState , dispatchCartAction] = useReducer(cartReducer , defaultCartState);

  const addItemToCartHandler = (item) => {
    dispatchCartAction({ type :'ADD' , item : item});
  };

  const removeItemFromCartHandler = (id) => {
    dispatchCartAction({ type :'REMOVE' , id : id});
};

  const cartContext = {
    items: cartState.items ,
    totalAmount: cartState.totalAmount ,
    addItem: addItemToCartHandler,
    removeItem: removeItemFromCartHandler
  };

  return (
    <CartContext.Provider value={cartContext}>
      {props.children}
    </CartContext.Provider>
  );
};

export default CartProvider;

__________________________________________________________________________________________________* * * * *  cartContext.js * * * * ____________________________________________________________________________________________________
import React from "react";
const CartContext =React.createContext({
    items:[],
    totalAmount:0,
    addItem : (item) => {},
    removeItem : (id) => {}
});
export default CartContext;


___________________________________________________________________________________* * * *  * * * *  APP>js * * * * * * * _______________________________________________________________________________________________________


import { useState } from 'react';

import Header from './components/Layout/Header';
import Dishes from './components/Dishes/dishes';
import Cart from './components/Cart/Cart';
import CartProvider from './components/Store/cartProvider';



function App() {
  const [cartIsShown , setCartIsShown] =useState(false);

  const showCartHandler = () => {
    setCartIsShown(true);
  }

  const hideCartHandler = () =>{
    setCartIsShown(false);
  }
  return (
    <CartProvider>
    { cartIsShown &&  <Cart onClose ={hideCartHandler}/>}
    <Header  onShowCart = {showCartHandler}/>
    <main>
    <Dishes/>
    </main>
    </CartProvider>
  );
}

export default App;
